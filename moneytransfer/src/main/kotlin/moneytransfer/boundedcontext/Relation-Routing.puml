@startuml

package "Host" <<Rectangle>> {
}

package "Country Bounded Context" <<Rectangle>> {
    package "Country Domain Layer" <<Rectangle>> {
        class Country

        class GetCountries {
            + invoke(): Countries
        }
        GetCountries ..> Country : use
    }

    package "Country Presentation Layer" <<Rectangle>> {
    }
    "Country Presentation Layer" ..> GetCountries : "use"
}
"Host" ..> "Country Presentation Layer" : Downstream

package "Transfer Bounded Context" <<Rectangle>> {
    package "Transfer Presentation Layer" <<Rectangle>> {
    }

    package "Transfer Domain Layer" <<Rectangle>> {
        class Transfer {
            - country: Country
            - receiver: Receiver
        }

        class TransferNumber

        class CreateTransfer {
            invoke(): Transfer
        }
        CreateTransfer ..> Transfer : use

        class SendTransfer {
            invoke(transfer: Transfer): TransferNumber
        }
        SendTransfer ..> Transfer
        SendTransfer ..> TransferNumber

        class ConfirmTransfer {
            invoke(transfer: Transfer): Status
        }
        ConfirmTransfer ..> Transfer
    }
    "Transfer Presentation Layer" ..> CreateTransfer : use
}
"Host" ..> "Transfer Presentation Layer" : Upstream

@enduml